openapi: 3.0.3
info:
  title: Visionary
  description: |-
    Приложение для обработки изображений в разные стили.
  version: 1.0.0
tags:
  - name: auth
    description: Операции, связанные с авторизацией, регистрацией пользователя
  - name: user
    description: Операции, связанные с пользователями
  - name: image
    description: Операции, связанные с изображениями
paths:
  /api/v1/auth/register:
    post:
      tags:
        - auth
      summary: Регистрация нового пользователя по никнейму
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        '200':
          description: Пользователь успешно зарегистрирован
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Пользователь с таким никнеймом уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/auth/login:
    post:
      tags:
        - auth
      summary: Аутентификация уже существующего пользователя
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        '200':
          description: Пользователь успешно залогинен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь с такими данными не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/auth/refresh:
    post:
      tags:
        - auth
      summary: Обновление access-токена
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshRequest"
      responses:
        '200':
          description: Access-токен успешно обновлен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Refresh токен не валиден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/image/save:
    post:
      tags:
        - image
      summary: Сохранение обработанного изображения на сервере
      operationId: saveImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SaveImageRequest"
      responses:
        '200':
          description: Изображение успешно сохранено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaveImageResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '413':
          description: Изображение слишком большого размера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '415':
          description: Изображение в неподдерживаемом формате
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: [ ]
  /api/v1/image/{uuid}:
    get:
      tags:
        - image
      summary: Получить данные изображения по uuid
      operationId: getImage
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid изображения, которое нужно получить
          schema:
            type: string
            format: uuid
            example: "743c8075-7d10-4834-8706-78b8fe88b352"
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Изображение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - {}
        - jwt-token: []
    put:
      tags:
        - image
      summary: Обновить уровень доступа к изображению
      operationId: updateImage
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid изображения, которое необходимо обновить
          schema:
            type: string
            format: uuid
            example: "743c8075-7d10-4834-8706-78b8fe88b352"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateImageRequest"
      responses:
        '200':
          description: Изображение успешно обновлено
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Изображение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
    delete:
      tags:
        - image
      summary: Удалить сохраненное изображение
      operationId: deleteImage
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid изображения, которое необходимо удалить
          schema:
            type: string
            format: uuid
            example: "743c8075-7d10-4834-8706-78b8fe88b352"
      responses:
        '200':
          description: Изображение успешно удалено
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Изображение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/user/{userId}:
    get:
      tags:
        - user
      summary: Получить данные пользователя
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя, данные которого нужно получить
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - user
      summary: Обновить данные пользователя
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя, аккаунт которого нужно обновить
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
      responses:
        '200':
          description: Данные успешно обновлены
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Пользователь с таким никнеймом уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '413':
          description: Аватарка слишком большого размера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '415':
          description: Аватарка в неподдерживаемом формате
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
    delete:
      tags:
        - user
      summary: Удалить аккаунт пользователя
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя, аккаунт которого нужно удалить
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
      responses:
        '200':
          description: Аккаунт успешно удален
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Вызвавший операцию пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/user/{userId}/avatar:
    delete:
      tags:
        - user
      summary: Удалить аватар пользователя
      operationId: deleteAvatar
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
      responses:
        '200':
          description: Аватар успешно удален
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: integer
          example: -1
          description: Код ошибки
        message:
          type: string
          example: "Описание ошибки"
          description: Описание ошибки
      required:
        - errorCode
        - message
    RegisterRequest:
      type: object
      properties:
        nickname:
          type: string
          minLength: 4
          maxLength: 25
          pattern: ^\S(.*\S)?$
          example: "admin"
          description: Никнейм пользователя
        email:
          type: string
          format: email
          example: "my_mail@email.com"
          description: Почта пользователя
        password:
          type: string
          format: password
          minLength: 8
          example: "myP4ssw0rd"
          description: Пароль пользователя
      required:
        - nickname
        - email
        - password
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "my_mail@email.com"
          description: Почта пользователя
        password:
          type: string
          format: password
          example: "myP4ssw0rd"
          description: Пароль пользователя
      required:
        - email
        - password
    RefreshRequest:
      type: object
      properties:
        refreshToken:
          type: string
          example: "$2a$10$taxVDg/YdruyrjwaOK2JqeeHKaJVuWN963e98XciQlwpvilR07OTe"
          description: Refresh-токен пользователя
      required:
        - refreshToken
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: "$2a$10$taxVDg/YdruyrjwaOK2JqeeHKaJVuWN963e98XciQlwpvilR07OTe"
          description: Access-токен пользователя
        refreshToken:
          type: string
          example: "$2a$10$taxVDg/YdruyrjwaOK2JqeeHKaJVuWN963e98XciQlwpvilR07OTe"
          description: Refresh-токен пользователя
      required:
        - accessToken
        - refreshToken
    SaveImageRequest:
      type: object
      properties:
        image:
          type: string
          format: binary
          nullable: false
          description: Изображение, которое необходимо сохранить
        protection:
          type: string
          example: "public"
          description: Уровень доступа к изображению (публичный или приватный)
          enum:
            - public
            - private
      required:
        - image
        - protection
    SaveImageResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: "743c8075-7d10-4834-8706-78b8fe88b352"
          description: UUID сохраненного изображения
      required:
        - uuid
    ImageResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: "743c8075-7d10-4834-8706-78b8fe88b352"
          description: UUID сохраненного изображения
        protection:
          type: string
          example: "public"
          description: Уровень доступа к изображению
          enum:
            - public
            - private
        authorId:
          type: integer
          format: int64
          example: 1
          description: id автора изображения
          minimum: 1
        authorNickname:
          type: string
          example: "admin"
          description: Никнейм автора изображения
        authorAvatarUuid:
          type: string
          format: uuid
          example: "743c8075-7d10-4834-8706-78b8fe88b352"
          description: UUID аватарки автора изображения
      required:
        - uuid
    UpdateImageRequest:
      type: object
      properties:
        protection:
          type: string
          example: public
          description: Новый уровень доступа к изображению (публичный или приватный)
          enum:
            - public
            - private
      required:
        - protection
    UserResponse:
      type: object
      properties:
        userId:
          type: integer
          format: int64
          description: id пользователя
          example: 1
          minimum: 1
        nickname:
          type: string
          minLength: 4
          maxLength: 25
          pattern: ^\S(.*\S)?$
          description: Никнейм пользователя
          example: "admin"
        email:
          type: string
          format: email
          description: Почта пользователя
          example: "my_mail@email.com"
        description:
          type: string
          maxLength: 255
          description: Описание пользователя
          example: "Так то у меня свой бизнес, а это для души"
        avatarUuid:
          type: string
          format: uuid
          description: uuid аватарки пользователя
          example: "743c8075-7d10-4834-8706-78b8fe88b352"
      required:
        - userId
        - nickname
        - email
    UpdateUserRequest:
      type: object
      properties:
        nickname:
          type: string
          nullable: true
          minLength: 4
          maxLength: 25
          pattern: ^\S(.*\S)?$
          description: Новый никнейм пользователя
          example: "admin"
        description:
          type: string
          maxLength: 255
          description: Новое описание пользователя. null - оставить без изменений, '' - очистить
          example: "Так то у меня свой бизнес, а это для души"
        password:
          type: string
          nullable: true
          format: password
          minLength: 8
          description: Новый пароль пользователя
          example: "myP4ssw0rd"
        avatar:
          type: string
          format: binary
          description: Новая аватарка пользователя
      anyOf:
        - required:
          - nickname
        - required:
          - description
        - required:
          - password
        - required:
          - avatar
  securitySchemes:
    jwt-token:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT-токен пользователя
