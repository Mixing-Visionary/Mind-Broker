openapi: 3.0.3
info:
  title: Visionary
  description: |-
    Приложение для обработки изображений в разные стили.
  version: 1.0.0
tags:
  - name: auth
    description: Операции, связанные с авторизацией, регистрацией пользователя
  - name: user
    description: Операции, связанные с пользователями
  - name: processing
    description: Операции, связанные с обработкой изображения
  - name: image
    description: Операции, связанные с изображениями
  - name: comment
    description: Операции, связанные с комментариями
  - name: feed
    description: Операции, связанные с лентой
  - name: follow
    description: Операции, связанные с подписками
  - name: like
    description: Операции, связанные с лайками
paths:
  /api/v1/auth/register:
    post:
      tags:
        - auth
      summary: Регистрация нового пользователя по никнейму
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        '200':
          description: Пользователь успешно зарегистрирован
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Пользователь с таким никнеймом уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/auth/login:
    post:
      tags:
        - auth
      summary: Аутентификация уже существующего пользователя
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        '200':
          description: Пользователь успешно залогинен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь с такими данными не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/auth/refresh:
    post:
      tags:
        - auth
      summary: Обновление access-токена
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshRequest"
      responses:
        '200':
          description: Access-токен успешно обновлен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Refresh токен не валиден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/image/save:
    post:
      tags:
        - image
      summary: Сохранение обработанного изображения на сервере
      operationId: saveImage
      parameters:
        - name: protection
          in: query
          required: true
          schema:
            type: string
            example: public
            description: Уровень доступа к изображению (публичный или приватный)
            enum:
              - public
              - private
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/SaveImageRequest"
      responses:
        '200':
          description: Изображение успешно сохранено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaveImageResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '413':
          description: Изображение слишком большого размера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '415':
          description: Изображение в неподдерживаемом формате
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/image/{uuid}:
    get:
      tags:
        - image
      summary: Получить данные изображения по uuid
      operationId: getImage
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid изображения, которое нужно получить
          schema:
            type: string
            format: uuid
            example: "743c8075-7d10-4834-8706-78b8fe88b352"
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Изображение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - {}
        - jwt-token: []
    put:
      tags:
        - image
      summary: Обновить уровень доступа к изображению
      operationId: updateImage
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid изображения, которое необходимо обновить
          schema:
            type: string
            format: uuid
            example: "743c8075-7d10-4834-8706-78b8fe88b352"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateImageRequest"
      responses:
        '200':
          description: Изображение успешно обновлено
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Изображение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
    delete:
      tags:
        - image
      summary: Удалить сохраненное изображение
      operationId: deleteImage
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid изображения, которое необходимо удалить
          schema:
            type: string
            format: uuid
            example: "743c8075-7d10-4834-8706-78b8fe88b352"
      responses:
        '200':
          description: Изображение успешно удалено
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Изображение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/user:
    get:
      tags:
        - user
      summary: Получить данные текущего пользователя
      operationId: getCurrentUser
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
    put:
      tags:
        - user
      summary: Обновить данные текущего пользователя
      operationId: updateCurrentUser
      parameters:
        - name: nickname
          in: query
          required: false
          schema:
            type: string
            nullable: true
            minLength: 4
            maxLength: 25
            pattern: ^\S(.*\S)?$
            description: Новый никнейм пользователя
            example: "admin"
        - name: description
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
            description: Новое описание пользователя. null - оставить без изменений, '' - очистить
            example: "Так то у меня свой бизнес, а это для души"
        - name: password
          in: query
          required: false
          schema:
            type: string
            nullable: true
            format: password
            minLength: 8
            description: Новый пароль пользователя
            example: "myP4ssw0rd"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
      responses:
        '200':
          description: Данные успешно обновлены
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Пользователь с таким никнеймом уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '413':
          description: Аватарка слишком большого размера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '415':
          description: Аватарка в неподдерживаемом формате
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
    delete:
      tags:
        - user
      summary: Удалить аккаунт текущего пользователя
      operationId: deleteCurrentUser
      responses:
        '200':
          description: Аккаунт успешно удален
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Вызвавший операцию пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/user/avatar:
    delete:
      tags:
        - user
      summary: Удалить аватар пользователя
      operationId: deleteCurrentAvatar
      responses:
        '200':
          description: Аватар успешно удален
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/user/{userId}:
    get:
      tags:
        - user
      summary: Получить данные пользователя
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя, данные которого нужно получить
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - user
      summary: Обновить данные пользователя
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя, аккаунт которого нужно обновить
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
        - name: nickname
          in: query
          required: false
          schema:
            type: string
            nullable: true
            minLength: 4
            maxLength: 25
            pattern: ^\S(.*\S)?$
            description: Новый никнейм пользователя
            example: "admin"
        - name: description
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
            description: Новое описание пользователя. null - оставить без изменений, '' - очистить
            example: "Так то у меня свой бизнес, а это для души"
        - name: password
          in: query
          required: false
          schema:
            type: string
            nullable: true
            format: password
            minLength: 8
            description: Новый пароль пользователя
            example: "myP4ssw0rd"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
      responses:
        '200':
          description: Данные успешно обновлены
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Пользователь с таким никнеймом уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '413':
          description: Аватарка слишком большого размера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '415':
          description: Аватарка в неподдерживаемом формате
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
    delete:
      tags:
        - user
      summary: Удалить аккаунт пользователя
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя, аккаунт которого нужно удалить
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
      responses:
        '200':
          description: Аккаунт успешно удален
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Вызвавший операцию пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/user/{userId}/avatar:
    delete:
      tags:
        - user
      summary: Удалить аватар пользователя
      operationId: deleteAvatar
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
      responses:
        '200':
          description: Аватар успешно удален
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/user/images:
    get:
      tags:
        - image
      summary: Получить изображения текущего пользователя
      operationId: getCurrentUserImages
      parameters:
        - name: size
          in: query
          required: true
          description: Кол-во изображений пользователя, которое нужно получить
          schema:
            type: integer
            example: 10
            minimum: 1
        - name: page
          in: query
          required: true
          description: Смещение, с которым нужно получить изображение (записи от page * size + 1 до (page + 1) * size включительно)
          schema:
            type: integer
            example: 0
            minimum: 0
        - name: protection
          in: query
          required: true
          description: Изображения с каким уровнем доступа необходимо получить
          schema:
            type: string
            example: public
            enum:
              - public
              - private
      responses:
        '200':
          description: Изображения пользователя успешно получены
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetImagesResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/user/{userId}/images:
    get:
      tags:
        - image
      summary: Получить изображения другого пользователя
      operationId: getUserImages
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя, у которого надо получить изображения
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
        - name: size
          in: query
          required: true
          description: Кол-во изображений пользователя, которое нужно получить
          schema:
            type: integer
            example: 10
            minimum: 1
        - name: page
          in: query
          required: true
          description: Смещение, с которым нужно получить изображение (записи от page * size + 1 до (page + 1) * size включительно)
          schema:
            type: integer
            example: 0
            minimum: 0
      responses:
        '200':
          description: Изображения пользователя успешно получены
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetImagesResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/processing:
    post:
      tags:
        - processing
      summary: Обработка изображения нейросетью
      operationId: processing
      parameters:
        - name: style
          in: query
          required: true
          schema:
            type: string
            example: "сyberpunk"
            description: Стиль, в который необходимо обработать изображение
        - name: strength
          in: query
          required: false
          schema:
            type: number
            multipleOf: 0.01
            nullable: true
            minimum: 0
            maximum: 1
            description: Насколько сильно обрабатывать изображение
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ProcessingImageRequest"
      responses:
        '200':
          description: Изображение успешно обработалось
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessingImageResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '402':
          description: У пользователя не открыт данный стиль
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '415':
          description: Изображение в неподдерживаемом формате
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '429':
          description: Достигнут лимит запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/processing/{uuid}:
    get:
      tags:
        - processing
      summary: Уточнить статус обработки изображения
      operationId: getStatus
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid операции на обработку изображения
          schema:
            type: string
            format: uuid
            example: "743c8075-7d10-4834-8706-78b8fe88b352"
      responses:
        '200':
          description: Ок
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessingStatusResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Нету доступа к этому запросу на обработку
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Запрос на обработку не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/styles:
    get:
      tags:
        - processing
      summary: Получить все существующие стили
      operationId: styles
      responses:
        '200':
          description: Стили успешно получены
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StylesResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален или стиль сейчас не поддерживается
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/image/{uuid}/like:
    post:
      tags:
        - like
      summary: Поставить лайк изображению
      operationId: like
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid изображения, которому поставить лайк
          schema:
            type: string
            format: uuid
            example: "743c8075-7d10-4834-8706-78b8fe88b352"
      responses:
        '200':
          description: Лайк успешно поставлен
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Нету доступа к изображению
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Изображение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Лайк на это изображение уже стоит
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
    delete:
      tags:
        - like
      summary: Убрать лайк с изображения
      operationId: dislike
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid изображения, лайк с которого необходимо убрать
          schema:
            type: string
            format: uuid
            example: "743c8075-7d10-4834-8706-78b8fe88b352"
      responses:
        '200':
          description: Лайк успешно убран
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Нету доступа к изображению
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Изображение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Лайк на это изображение не стоит
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/image/{uuid}/comment:
    post:
      tags:
        - comment
      summary: Оставить комментарий к изображению
      operationId: saveComment
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid изображения, к которому нужно оставить комментарий
          schema:
            type: string
            format: uuid
            example: "743c8075-7d10-4834-8706-78b8fe88b352"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaveCommentRequest"
      responses:
        '200':
          description: Комментарий успешно сохранен
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Нету доступа к этому изображению
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Изображение не найдено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/image/{uuid}/comments:
    get:
      tags:
        - comment
      summary: Получить комментарии к изображению
      operationId: getComments
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid изображения, комментарии которого надо получить
          schema:
            type: string
            format: uuid
            example: "743c8075-7d10-4834-8706-78b8fe88b352"
        - name: size
          in: query
          required: true
          description: Кол-во комментариев, которое нужно получить
          schema:
            type: integer
            example: 10
            minimum: 1
        - name: page
          in: query
          required: true
          description: Смещение, с которым нужно получить изображение (записи от page * size + 1 до (page + 1) * size включительно)
          schema:
            type: integer
            example: 0
            minimum: 0
      responses:
        '200':
          description: Комментарии к изображению успешно получены
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCommentsResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Нету доступа к этому изображению
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Изображение или комментарии не найдены
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - {}
  /api/v1/user/{userId}/follow:
    post:
      tags:
        - follow
      summary: Подписаться на пользователя
      operationId: follow
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя, на которого нужно подписаться
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
      responses:
        '200':
          description: Подписка успешна
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Пользователь уже подписан на другого пользователя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
    delete:
      tags:
        - follow
      summary: Отписаться от пользователя
      operationId: unfollow
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя, от которого нужно отписаться
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
      responses:
        '200':
          description: Отписка успешна
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Пользователь не подписан на другого пользователя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/user/followers:
    get:
      tags:
        - follow
      summary: Получить подписчиков пользователя
      operationId: getCurrentFollowers
      parameters:
        - name: size
          in: query
          required: true
          description: Кол-во подписчиков пользователя, которое нужно получить
          schema:
            type: integer
            example: 10
            minimum: 1
        - name: page
          in: query
          required: true
          description: Смещение, с которым нужно получить изображение (записи от page * size + 1 до (page + 1) * size включительно)
          schema:
            type: integer
            example: 0
            minimum: 0
      responses:
        '200':
          description: Список подписчиков успешно получен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/user/follows:
    get:
      tags:
        - follow
      summary: Получить подписки пользователя
      operationId: getCurrentFollows
      parameters:
        - name: size
          in: query
          required: true
          description: Кол-во подписок пользователя, которое нужно получить
          schema:
            type: integer
            example: 10
            minimum: 1
        - name: page
          in: query
          required: true
          description: Смещение, с которым нужно получить изображение (записи от page * size + 1 до (page + 1) * size включительно)
          schema:
            type: integer
            example: 0
            minimum: 0
      responses:
        '200':
          description: Список подписок успешно получен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - jwt-token: []
  /api/v1/user/{userId}/followers:
    get:
      tags:
        - follow
      summary: Получить подписчиков пользователя
      operationId: getFollowers
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя, у которого надо получить подписчиков
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
        - name: size
          in: query
          required: true
          description: Кол-во подписчиков пользователя, которое нужно получить
          schema:
            type: integer
            example: 10
            minimum: 1
        - name: page
          in: query
          required: true
          description: Смещение, с которым нужно получить изображение (записи от page * size + 1 до (page + 1) * size включительно)
          schema:
            type: integer
            example: 0
            minimum: 0
      responses:
        '200':
          description: Список подписчиков успешно получен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/user/{userId}/follows:
    get:
      tags:
        - follow
      summary: Получить подписки пользователя
      operationId: getFollows
      parameters:
        - name: userId
          in: path
          required: true
          description: id пользователя, у которого надо получить подписки
          schema:
            type: integer
            format: int64
            example: 1
            minimum: 1
        - name: size
          in: query
          required: true
          description: Кол-во подписок пользователя, которое нужно получить
          schema:
            type: integer
            example: 10
            minimum: 1
        - name: page
          in: query
          required: true
          description: Смещение, с которым нужно получить изображение (записи от page * size + 1 до (page + 1) * size включительно)
          schema:
            type: integer
            example: 0
            minimum: 0
      responses:
        '200':
          description: Список подписок успешно получен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/feed:
    get:
      tags:
        - feed
      summary: Получить изображения из ленты публикаций
      operationId: getFeed
      parameters:
        - name: sort
          in: query
          required: true
          description: Сортировка ленты по новым/популярным/подписки
          schema:
            type: string
            enum:
              - new
              - popular
              - follow
        - name: size
          in: query
          required: true
          description: Кол-во изображений, которое нужно получить
          schema:
            type: integer
            example: 10
            minimum: 1
        - name: page
          in: query
          required: true
          description: Смещение, с которым нужно получить изображение (записи от page * size + 1 до (page + 1) * size включительно)
          schema:
            type: integer
            example: 0
            minimum: 0
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetImagesResponse"
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '401':
          description: Пользователь неавторизован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '410':
          description: Пользователь удален
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - {}
        - jwt-token: []
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: integer
          example: -1
          description: Код ошибки
        message:
          type: string
          example: "Описание ошибки"
          description: Описание ошибки
      required:
        - errorCode
        - message
    RegisterRequest:
      type: object
      properties:
        nickname:
          type: string
          minLength: 4
          maxLength: 25
          pattern: ^\S(.*\S)?$
          example: "admin"
          description: Никнейм пользователя
        email:
          type: string
          format: email
          example: "my_mail@email.com"
          description: Почта пользователя
        password:
          type: string
          format: password
          minLength: 8
          example: "myP4ssw0rd"
          description: Пароль пользователя
      required:
        - nickname
        - email
        - password
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "my_mail@email.com"
          description: Почта пользователя
        password:
          type: string
          format: password
          example: "myP4ssw0rd"
          description: Пароль пользователя
      required:
        - email
        - password
    RefreshRequest:
      type: object
      properties:
        refreshToken:
          type: string
          example: "$2a$10$taxVDg/YdruyrjwaOK2JqeeHKaJVuWN963e98XciQlwpvilR07OTe"
          description: Refresh-токен пользователя
      required:
        - refreshToken
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: "$2a$10$taxVDg/YdruyrjwaOK2JqeeHKaJVuWN963e98XciQlwpvilR07OTe"
          description: Access-токен пользователя
        refreshToken:
          type: string
          example: "$2a$10$taxVDg/YdruyrjwaOK2JqeeHKaJVuWN963e98XciQlwpvilR07OTe"
          description: Refresh-токен пользователя
      required:
        - accessToken
        - refreshToken
    SaveImageRequest:
      type: object
      properties:
        image:
          type: string
          format: binary
          nullable: false
          description: Изображение, которое необходимо сохранить
      required:
        - image
    SaveImageResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: "743c8075-7d10-4834-8706-78b8fe88b352"
          description: UUID сохраненного изображения
      required:
        - uuid
    ImageResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: "743c8075-7d10-4834-8706-78b8fe88b352"
          description: UUID сохраненного изображения
        protection:
          type: string
          example: "public"
          description: Уровень доступа к изображению
          enum:
            - public
            - private
        authorId:
          type: integer
          format: int64
          example: 1
          description: id автора изображения
          minimum: 1
        authorNickname:
          type: string
          example: "admin"
          description: Никнейм автора изображения
        authorAvatarUuid:
          type: string
          format: uuid
          example: "743c8075-7d10-4834-8706-78b8fe88b352"
          description: UUID аватарки автора изображения
      required:
        - uuid
    GetImagesResponse:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: "#/components/schemas/ImageResponse"
          description: Найденные изображения пользователя
      required:
        - images
    UpdateImageRequest:
      type: object
      properties:
        protection:
          type: string
          example: public
          description: Новый уровень доступа к изображению (публичный или приватный)
          enum:
            - public
            - private
      required:
        - protection
    UserResponse:
      type: object
      properties:
        userId:
          type: integer
          format: int64
          description: id пользователя
          example: 1
          minimum: 1
        nickname:
          type: string
          minLength: 4
          maxLength: 25
          pattern: ^\S(.*\S)?$
          description: Никнейм пользователя
          example: "admin"
        email:
          type: string
          format: email
          description: Почта пользователя
          example: "my_mail@email.com"
        description:
          type: string
          maxLength: 255
          description: Описание пользователя
          example: "Так то у меня свой бизнес, а это для души"
        avatarUuid:
          type: string
          format: uuid
          description: uuid аватарки пользователя
          example: "743c8075-7d10-4834-8706-78b8fe88b352"
      required:
        - userId
        - nickname
        - email
    UsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserResponse"
    UpdateUserRequest:
      type: object
      properties:
        avatar:
          type: string
          format: binary
          nullable: true
          description: Новая аватарка пользователя
    ProcessingImageRequest:
      type: object
      properties:
        image:
          type: string
          format: binary
          nullable: false
          description: Изображение, которое необходимо обработать
      required:
        - image
    ProcessingImageResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: "743c8075-7d10-4834-8706-78b8fe88b352"
          description: uuid запроса на обработку
      required:
        - uuid
    ProcessingStatusResponse:
      type: object
      properties:
        base64Image:
          type: string
          description: Обработанное изображение в формате base64
        processingStatus:
          type: string
          example: PENDING
          description: Текущий статус запроса на обработку
          enum:
            - PENDING
            - PROCESSING
            - COMPLETED
            - CANCELED
            - FAILED
      required:
        - processingStatus
    StyleResponse:
      type: object
      properties:
        name:
          type: string
          description: Название стиля
          example: "Киберпанк"
        available:
          type: boolean
          description: Доступен ли данный стиль пользователю
          example: true
        icon:
          type: string
          description: Название иконки для стиля
          example: "743c8075-7d10-4834-8706-78b8fe88b352"
      required:
        - name
        - available
    StylesResponse:
      type: object
      properties:
        styles:
          type: array
          items:
            $ref: "#/components/schemas/StyleResponse"
      required:
        - styles
    SaveCommentRequest:
      type: object
      properties:
        comment:
          type: string
          maxLength: 255
          description: Комментарий пользователя
          example: "Фотка огонь"
      required:
        - comment
    CommentResponse:
      type: object
      properties:
        authorId:
          type: integer
          format: int64
          description: id пользователя, оставившего комментарий
          example: 1
          minimum: 1
        authorNickname:
          type: string
          minLength: 4
          maxLength: 25
          pattern: ^\S(.*\S)?$
          description: Никнейм пользователя, оставившего комментарий
          example: "admin"
        authorAvatarUuid:
          type: string
          format: uuid
          description: uuid аватарки пользователя, оставившего комментарий
          example: "743c8075-7d10-4834-8706-78b8fe88b352"
        authorActive:
          type: boolean
          description: Активен ли автор комментария
          example: true
        commentId:
          type: integer
          format: int64
          description: id комментария
          example: 3
        comment:
          type: string
          maxLength: 255
          description: Комментарий пользователя
          example: "Фотка огонь"
        createdAt:
          type: string
          description: Время создания комментария
          example: "06.03.2025 14:25:39"
      required:
        - commentId
        - comment
        - createdAt
    GetCommentsResponse:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: "#/components/schemas/CommentResponse"
  securitySchemes:
    jwt-token:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT-токен пользователя
